name: Publish Docker image (multi-arch)

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  workflow_dispatch:
  workflow_run:
    workflows: ["Test"]
    types: [completed]
    branches: ["main"]

concurrency:
  group: docker-publish-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (arm64 emulation)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/firbykirby/udp-broadcast-relay
          tags: |
            type=raw,value=latest
            type=semver,pattern=v{{version}}

      - name: Build and push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          sbom: false
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy scan on published image
        uses: aquasecurity/trivy-action@0.28.0
        if: always()
        with:
          scan-type: 'image'
          image-ref: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          format: 'sarif'
          output: 'trivy-published.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: 0

      - name: Upload published image SARIF results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-published.sarif
          category: published-image-scan
